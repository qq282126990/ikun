import Vue from 'vue/dist/vue.esm.js';
import ElementUI from 'element-ui';
import { form as Data } from '../popup/utils';

Vue.use(ElementUI);

// Ê≥®ÊÑèÔºåÂøÖÈ°ªËÆæÁΩÆ‰∫Ürun_at=document_startÊ≠§ÊÆµ‰ª£Á†ÅÊâç‰ºöÁîüÊïà

// // Âú®targetÈ°µÈù¢‰∏≠Êñ∞Âª∫‰∏Ä‰∏™Â∏¶ÊúâidÁöÑdomÂÖÉÁ¥†ÔºåÂ∞ÜvueÂØπË±°ÊåÇËΩΩÂà∞Ëøô‰∏™dom‰∏ä„ÄÇ
// function insertFloat() {
//   let element = document.createElement('div');
//   let attr = document.createAttribute('id');
//   attr.value = 'appPlugin';
//   element.setAttributeNode(attr);
//   document.getElementsByTagName('body')[0].appendChild(element);

//   let link = document.createElement('link');
//   let linkAttr = document.createAttribute('rel');
//   linkAttr.value = 'stylesheet';
//   let linkHref = document.createAttribute('href');
//   linkHref.value = 'https://unpkg.com/element-ui/lib/theme-chalk/index.css';
//   link.setAttributeNode(linkAttr);
//   link.setAttributeNode(linkHref);
//   document.getElementsByTagName('head')[0].appendChild(link);

//   let left = 0;
//   let top = 0;
//   let mx = 0;
//   let my = 0;
//   let onDrag = false;

//   var drag = {
//     inserted: function (el) {
//       (el.onmousedown = function (e) {
//         left = el.offsetLeft;
//         top = el.offsetTop;
//         mx = e.clientX;
//         my = e.clientY;
//         if (my - top > 40) return;

//         onDrag = true;
//       }),
//       (window.onmousemove = function (e) {
//         if (onDrag) {
//           let nx = e.clientX - mx + left;
//           let ny = e.clientY - my + top;
//           let width = el.clientWidth;
//           let height = el.clientHeight;
//           let bodyWidth = window.document.body.clientWidth;
//           let bodyHeight = window.document.body.clientHeight;

//           if (nx < 0) nx = 0;
//           if (ny < 0) ny = 0;

//           if (ny > bodyHeight - height && bodyHeight - height > 0) {
//             ny = bodyHeight - height;
//           }

//           if (nx > bodyWidth - width) {
//             nx = bodyWidth - width;
//           }

//           el.style.left = nx + 'px';
//           el.style.top = ny + 'px';
//         }
//       }),
//       (el.onmouseup = function (e) {
//         if (onDrag) {
//           onDrag = false;
//         }
//       });
//     },
//   };

//   window.kz_vm = new Vue({
//     el: '#appPlugin',
//     directives: {
//       drag: drag,
//     },
//     template: `
//       <div class="float-page" ref="float" v-drag>
//         <el-card class="box-card" :body-style="{ padding: '15px' }">
//           <div slot="header" class="clearfix" style="cursor: move">
//             <span>ÊÇ¨ÊµÆÁ™ó</span>
//             <el-button style="float: right; padding: 3px 0" type="text" @click="toggle">{{ show ? 'Êî∂Ëµ∑' : 'Â±ïÂºÄ'}}</el-button>
//           </div>
//           <transition name="ul">
//             <div v-if="show" class="ul-box">
//               <span> {{user}} </span>
//             </div>
//           </transition>
//         </el-card>
//       </div>
//       `,
//     data: function () {
//       return {
//         show: true,
//         list: [],
//         user: {
//           username: '',
//           follow: 0,
//           title: '',
//           view: 0,
//         },
//       };
//     },
//     mounted() {},
//     methods: {
//       toggle() {
//         this.show = !this.show;
//       },
//       sendMessage(data) {
//         chrome.runtime.sendMessage(data, function (response) {
//           console.log('Êî∂Âà∞Êù•Ëá™ÂêéÂè∞ÁöÑÂõûÂ§çÔºö' + response);
//         });
//       },
//     },
//   });
// }

// ÂàùÂßãÂåñ‰∏ÄÊ¨°Êï∞ÊçÆ
if (!localStorage.getItem('ikun-data')) {
  localStorage.setItem('ikun-data', JSON.stringify(Data));
}

let form = JSON.parse(localStorage.getItem('ikun-data'));

if (form.type) {
  localStorage.setItem('ikun-data', JSON.stringify(Data));

  form = Data;
}

// ËßÇÂØüÂô®ÁöÑÈÖçÁΩÆÔºàÈúÄË¶ÅËßÇÂØü‰ªÄ‰πàÂèòÂä®Ôºâ
const config = {
  attributes: true,
  childList: true,
  subtree: true,
};

// ËÆæÁΩÆÂ§¥ÂÉè
function setAvatar() {
  if (!document.getElementsByClassName('main-header-box')) {
    return;
  }

  const nav = document.getElementsByClassName('main-header-box')[0];

  // ÊôÆÈÄöÊõøÊç¢ÈìæÊé•
  if (nav) {
    const avatar = nav.getElementsByClassName('avatar-wrapper')[0];

    const img = avatar.getElementsByTagName('img')[0];

    if (img) {
      img.classList.add('ikun-rotate');
      img.src = form.avatar;
    }
  }

  // ÈÄöËøáÁõëÂê¨domÊõøÊç¢ÈìæÊé•
  const observer = new MutationObserver((mutationsList) => {
    for (let mutation of mutationsList) {
      if (mutation.type === 'attributes') {
        const target = mutation.target;

        if (
          target.className.length > 0 &&
          target.className.indexOf('avatar') > -1 &&
          target.src &&
          target.src !== form.avatar
        ) {
          target.src = form.avatar;
          target.classList.add('ikun-rotate');

          // Â§¥ÂÉèÈº†Ê†áËøõÂÖ•
          target.addEventListener('mouseover', () => {
            document.getElementsByClassName('niganma')[0].play();
          });

          // ÂèñÊ∂àÁõëÂê¨
          observer.disconnect();
        }
      }
    }
  });

  // ‰ª•‰∏äËø∞ÈÖçÁΩÆÂºÄÂßãËßÇÂØüÁõÆÊ†áËäÇÁÇπ
  observer.observe(nav, config);
}

// ËÆæÁΩÆËÉåÊôØ
function setBg() {
  const bg = document.getElementById('juejin');

  bg.style.backgroundImage = `url(${form.bg})`;
  bg.style.backgroundSize = '100px';
}

// ‰øÆÊîπÁ≠æÂà∞ÊñáÊ°à
function checkIn() {
  // Á≠æÂà∞Â§ñÂ±Ç
  const checkWrapper = document.getElementsByClassName('signin-tip signin')[0];

  if (!checkWrapper) {
    return;
  }

  // ÊèèËø∞
  const desc =
    '‰∏Ä‰∏™ÁúüÊ≠£ÁöÑmanÔºå‰∏Ä‰∏™ÁúüÊ≠£ÁöÑÁî∑‰∫∫‰ªñ Ê∏ÖÊ•öËá™Â∑±Ë¶ÅÂÅö‰ªÄ‰πàÔºåÂ¶ÇÊûú‰Ω†ÁúüÁöÑÊÉ≥ÁúãËøô‰∏Ä‰∏™‰∫∫ ÊòØ‰∏Ä‰∏™Áî∑Â≠©ÔºåËøòÊòØ‰∏Ä‰∏™Áî∑‰∫∫‰∏çË¶ÅÂéªÁúã‰ªñÁöÑbabyÔºå Áúã‰ªñÁöÑÂøÉ musicÔΩûüíó';

  // ÈÄöËøáÁõëÂê¨domÊõøÊç¢ÈìæÊé•
  const observer = new MutationObserver((mutationsList) => {
    for (let mutation of mutationsList) {
      if (mutation.type === 'attributes') {
        const target = mutation.target;

        // ‰øÆÊîπÁ≠æÂà∞ÊñáÊ°à
        if (target.className.indexOf('signedin-btn') > -1) {
          if (target.firstChild.innerText === 'Â∑≤Á≠æÂà∞') {
            target.firstChild.innerText = 'Â∑≤‰∏ãü•ö';
          }

          if (target.firstChild.innerText === 'ÂéªÁ≠æÂà∞') {
            target.firstChild.innerText = 'Âéª‰∏ãü•ö';
          }
        }

        if (target.className.indexOf('first-line') > -1) {
          target.style.alignItems = 'flex-start';
        }

        if (
          target.className.indexOf('second-line') > -1 &&
          target.innerText !== desc
        ) {
          target.innerText =
            '‰∏Ä‰∏™ÁúüÊ≠£ÁöÑmanÔºå‰∏Ä‰∏™ÁúüÊ≠£ÁöÑÁî∑‰∫∫‰ªñ Ê∏ÖÊ•öËá™Â∑±Ë¶ÅÂÅö‰ªÄ‰πàÔºåÂ¶ÇÊûú‰Ω†ÁúüÁöÑÊÉ≥ÁúãËøô‰∏Ä‰∏™‰∫∫ ÊòØ‰∏Ä‰∏™Áî∑Â≠©ÔºåËøòÊòØ‰∏Ä‰∏™Áî∑‰∫∫‰∏çË¶ÅÂéªÁúã‰ªñÁöÑbabyÔºå Áúã‰ªñÁöÑÂøÉ musicÔΩûüíó';
        }
      }
    }
  });

  // ‰ª•‰∏äËø∞ÈÖçÁΩÆÂºÄÂßãËßÇÂØüÁõÆÊ†áËäÇÁÇπ
  observer.observe(checkWrapper, config);
}

// ‰øÆÊîπÂè≥‰æßÂõ∫ÂÆöÂõæÊ†á
function setSidebar() {
  // Âõ∫ÂÆöÊ†è
  const globalComponentBox = document.getElementsByClassName(
    'global-component-box'
  )[0];

  // ÈÄöËøáÁõëÂê¨domÊõøÊç¢ÈìæÊé•
  const observer = new MutationObserver((mutationsList) => {
    for (let mutation of mutationsList) {
      if (mutation.type === 'attributes') {
        const target = mutation.target;

        // ‰æßËæπÊ†è
        if (target.className.indexOf('to-top-btn') > -1 && target.children[0]) {
          target.removeChild(target.children[0]);
          target.innerText = 'ü•ö';
        }
      }
    }
  });

  observer.observe(globalComponentBox, config);
}

// È°µÈù¢ÂúÜËßí
function setRadius() {
  document.getElementsByTagName('body')[0].className = '';

  // ÂºÄÂêØÂúÜËßí
  if (form.radius === 1) {
    document.getElementsByTagName('body')[0].className = 'ikun-radius';
  }
}

// ‰øÆÊîπÂàõ‰Ωú‰∏≠ÂøÉ
function setCreationCenter() {
  const searchAdd = document.getElementsByClassName('right-side-nav')[0];
  searchAdd.getElementsByClassName('add-btn')[0].innerText = 'Âà∂‰Ωú‰∫∫‰∏≠ÂøÉ';

  const placeholder = 'ÂÖ®Ê∞ëÂà∂‰Ωú‰∫∫Â§ßÂÆ∂Â•Ωüëã...';

  // ÈÄöËøáÁõëÂê¨domÊõøÊç¢ÈìæÊé•
  const observer = new MutationObserver((mutationsList) => {
    for (let mutation of mutationsList) {
      if (mutation.type === 'attributes') {
        const target = mutation.target;
        // ‰æßËæπÊ†è
        if (
          target.localName === 'button' &&
          target.className.indexOf('add-btn') > -1
        ) {
          target.innerText = 'Âà∂‰Ωú‰∫∫‰∏≠ÂøÉ';
        }

        // ÊêúÁ¥¢Ê°Ü
        if (
          target.localName === 'input' &&
          target.className.indexOf('search-input') > -1 &&
          target.placeholder !== placeholder
        ) {
          target.placeholder = placeholder;
        }
      }
    }
  });

  observer.observe(searchAdd, config);
}

// ÂàùÂßãÂåñ
function initData() {
  setAvatar();
  setBg();
  checkIn();
  setSidebar();
  setRadius();
  setCreationCenter();
}
initData();

// ÁõëÂê¨Êèí‰ª∂ËøîÂõûÊï∞ÊçÆ
chrome.runtime.onMessage.addListener((request) => {
  localStorage.setItem('ikun-data', JSON.stringify(request));

  // ÈáçÊñ∞ËÆæÁΩÆÊï∞ÊçÆ
  form = request;

  // ÂàùÂßãÂåñ
  initData();
});
